{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"attribute","text":"@discardableResult"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"add"},{"kind":"text","text":"("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"cancellable"},{"kind":"text","text":": "},{"kind":"typeIdentifier","identifier":"doc:\/\/TinkoffConcurrency\/documentation\/TinkoffConcurrency\/TCCancellable","preciseIdentifier":"s:18TinkoffConcurrency13TCCancellableP","text":"TCCancellable"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"anchor":"return-value","level":2,"type":"heading","text":"Return Value"},{"type":"paragraph","inlineContent":[{"type":"text","text":""},{"type":"codeVoice","code":"true"},{"type":"text","text":" if the cancellable operation was added; otherwise returns "},{"type":"codeVoice","code":"false"},{"type":"text","text":"."}]}]},{"kind":"parameters","parameters":[{"name":"cancellable","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The cancellable operation to add."}]}]}]},{"kind":"content","content":[{"anchor":"discussion","level":2,"type":"heading","text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"If the storage is in the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/TinkoffConcurrency\/documentation\/TinkoffConcurrency\/TCCancellablesStorage\/State-swift.enum\/cancelled"},{"type":"text","text":" "},{"type":"text","text":"state, cancellable operation will "},{"type":"strong","inlineContent":[{"type":"text","text":"not"}]},{"type":"text","text":" be added and will be "},{"type":"strong","inlineContent":[{"type":"text","text":"cancelled"}]},{"type":"text","text":"."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"If the storage is in the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/TinkoffConcurrency\/documentation\/TinkoffConcurrency\/TCCancellablesStorage\/State-swift.enum\/deactivated"},{"type":"text","text":" "},{"type":"text","text":"state, cancellable operation will "},{"type":"strong","inlineContent":[{"type":"text","text":"not"}]},{"type":"text","text":" be added and will be "},{"type":"strong","inlineContent":[{"type":"text","text":"ignored"}]},{"type":"text","text":"."}]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/tinkoffconcurrency\/tccancellablesstorage\/add(_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/TinkoffConcurrency\/documentation\/TinkoffConcurrency\/TCCancellablesStorage\/add(_:)","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Adds a cancellable operation."}],"kind":"symbol","metadata":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"add"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"TCCancellable","preciseIdentifier":"s:18TinkoffConcurrency13TCCancellableP"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"title":"add(_:)","roleHeading":"Instance Method","role":"symbol","symbolKind":"method","externalID":"s:18TinkoffConcurrency21TCCancellablesStorageC3addySbAA13TCCancellable_pF","modules":[{"name":"TinkoffConcurrency"}]},"hierarchy":{"paths":[["doc:\/\/TinkoffConcurrency\/documentation\/TinkoffConcurrency","doc:\/\/TinkoffConcurrency\/documentation\/TinkoffConcurrency\/TCCancellablesStorage"]]},"references":{"doc://TinkoffConcurrency/documentation/TinkoffConcurrency/TCCancellablesStorage":{"role":"symbol","title":"TCCancellablesStorage","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"TCCancellablesStorage"}],"abstract":[{"type":"text","text":"A storage of cancellable operations."}],"identifier":"doc:\/\/TinkoffConcurrency\/documentation\/TinkoffConcurrency\/TCCancellablesStorage","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"TCCancellablesStorage"}],"url":"\/documentation\/tinkoffconcurrency\/tccancellablesstorage"},"doc://TinkoffConcurrency/documentation/TinkoffConcurrency/TCCancellablesStorage/add(_:)":{"role":"symbol","title":"add(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"add"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"TCCancellable","preciseIdentifier":"s:18TinkoffConcurrency13TCCancellableP"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"abstract":[{"type":"text","text":"Adds a cancellable operation."}],"identifier":"doc:\/\/TinkoffConcurrency\/documentation\/TinkoffConcurrency\/TCCancellablesStorage\/add(_:)","kind":"symbol","type":"topic","url":"\/documentation\/tinkoffconcurrency\/tccancellablesstorage\/add(_:)"},"doc://TinkoffConcurrency/documentation/TinkoffConcurrency/TCCancellablesStorage/State-swift.enum/deactivated":{"role":"symbol","title":"TCCancellablesStorage.State.deactivated","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"deactivated"}],"abstract":[{"type":"text","text":"A deactivated state indicating that all added cancellable operations were discarded."}],"identifier":"doc:\/\/TinkoffConcurrency\/documentation\/TinkoffConcurrency\/TCCancellablesStorage\/State-swift.enum\/deactivated","kind":"symbol","type":"topic","url":"\/documentation\/tinkoffconcurrency\/tccancellablesstorage\/state-swift.enum\/deactivated"},"doc://TinkoffConcurrency/documentation/TinkoffConcurrency/TCCancellable":{"role":"symbol","title":"TCCancellable","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"TCCancellable"}],"abstract":[{"type":"text","text":"A protocol indicating that an operation supports cancellation."}],"identifier":"doc:\/\/TinkoffConcurrency\/documentation\/TinkoffConcurrency\/TCCancellable","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"TCCancellable"}],"url":"\/documentation\/tinkoffconcurrency\/tccancellable"},"doc://TinkoffConcurrency/documentation/TinkoffConcurrency/TCCancellablesStorage/State-swift.enum/cancelled":{"role":"symbol","title":"TCCancellablesStorage.State.cancelled","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"cancelled"}],"abstract":[{"type":"text","text":"A cancelled state indicating that all added cancellable operations were cancelled."}],"identifier":"doc:\/\/TinkoffConcurrency\/documentation\/TinkoffConcurrency\/TCCancellablesStorage\/State-swift.enum\/cancelled","kind":"symbol","type":"topic","url":"\/documentation\/tinkoffconcurrency\/tccancellablesstorage\/state-swift.enum\/cancelled"},"doc://TinkoffConcurrency/documentation/TinkoffConcurrency":{"role":"collection","title":"TinkoffConcurrency","abstract":[{"type":"text","text":"TinkoffConcurrency is a set of tools that fill some gaps when integrating Swift Concurrency to your project."}],"identifier":"doc:\/\/TinkoffConcurrency\/documentation\/TinkoffConcurrency","kind":"symbol","type":"topic","url":"\/documentation\/tinkoffconcurrency"}}}